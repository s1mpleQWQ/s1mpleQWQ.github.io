<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo+next v7.8美化(1)</title>
    <url>/post/b24ce228/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1. 下载主题"></a>1. 下载主题</h1><p>最简单的安装方式就是直接克隆整个仓库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 进入你的博客目录</span><br><span class="line">cd hexo</span><br><span class="line"># 将仓库复制到博客目录的 themes&#x2F;next 文件夹中</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>下载完成之后，可以在博客的 <code>themes</code> 文件夹中看到多了一个名为 <code>next</code> 的目录，这个目录就是主题仓库。</p>
<a id="more"></a>

<h1 id="2-基本设置"><a href="#2-基本设置" class="headerlink" title="2. 基本设置"></a>2. 基本设置</h1><h2 id="2-1-next-yml"><a href="#2-1-next-yml" class="headerlink" title="2.1 next.yml"></a>2.1 next.yml</h2><p>自从 NexT-7.3.0 开始，官方推荐使用数据文件将配置和主题分离，这样可以在不修改主题源码的情况下完成主题的配置，便于后续 next 版本更新。</p>
<p>我们将所有的主题配置都放在 <code>hexo/source/_data/next.yml</code> 中，所有的修改都将在这个文件中进行，不修改主题配置文件 <code>next/_config.yml</code> 。</p>
<p>具体步骤：</p>
<ul>
<li>在 <code>hexo/source/_data</code> 目录下新建 <code>next.yml</code> 文件，如果 <code>_data</code> 目录不存在，则创建 <code>_data</code> 目录；</li>
<li>将主题配置文件 <code>next/_config.yml</code> 所有内容复制到 <code>hexo/source/_data/next.yml</code> 文件中；</li>
<li>将 <code>hexo/source/_data/next.yml</code> 文件中 <code>override</code> 选项设置为 <code>true</code> 。</li>
</ul>
<h2 id="2-2-使用主题"><a href="#2-2-使用主题" class="headerlink" title="2.2 使用主题"></a>2.2 使用主题</h2><p>在站点配置文件 <code>hexo/_config.yml</code> 中，通过改变 <code>theme</code> 选项的值来选择主题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 选择 next 主题</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>在 <code>next.yml</code> 中通过改变 <code>scheme</code> 来选择主题样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>预览，输入下面命令后，在 <code>http://localhost:4000/</code> 查看效果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<h2 id="2-3-设置博客文字描述和语言"><a href="#2-3-设置博客文字描述和语言" class="headerlink" title="2.3 设置博客文字描述和语言"></a>2.3 设置博客文字描述和语言</h2><p>站点配置文件 <code>hexo/_config.yml</code> 修改 <code>site</code> 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yml</span><br><span class="line"># Site</span><br><span class="line">title: orduster 学习笔记 # 网站的标题</span><br><span class="line">subtitle: &#39;&#39; # 子标题</span><br><span class="line">description: &#39;&#39; </span><br><span class="line">keywords: # 网站关键字</span><br><span class="line">author: orduster # 网站作者</span><br><span class="line">language: zh-CN # 网站采用语言，要跟&#x2F;theme&#x2F;***&#x2F;languages&#x2F;**.yml下的文件名对应</span><br><span class="line">timezone: &#39;&#39; # 网站的时区</span><br></pre></td></tr></table></figure>
<h1 id="3-主题美化"><a href="#3-主题美化" class="headerlink" title="3. 主题美化"></a>3. 主题美化</h1><h2 id="3-1-显示本地图片"><a href="#3-1-显示本地图片" class="headerlink" title="3.1 显示本地图片"></a>3.1 显示本地图片</h2><p>安装 <code>hexo-asset-image</code> 插件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save  </span><br></pre></td></tr></table></figure>
<p>站点配置文件 <code>hexo/_config.yml</code> 中设置 <code>post_asset_folder</code> 的值为 <code>true</code> ，这样新建文章时，hexo 会自动建立一个与文章同名的目录，可以将这篇文章所有的图片放入。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文章资源文件夹</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>
<p>下面这个存在bug，目前没使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用这种方式引用图片 </span><br><span class="line">![](文件夹名&#x2F;图片名称)</span><br></pre></td></tr></table></figure>


<h2 id="3-2-添加图片放大预览功能"><a href="#3-2-添加图片放大预览功能" class="headerlink" title="3.2 添加图片放大预览功能"></a>3.2 添加图片放大预览功能</h2><p><code>next.yml</code> 文件 <code>fancybox</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fancybox: true</span><br></pre></td></tr></table></figure>
<h2 id="3-3-设置博客文章持久化链接"><a href="#3-3-设置博客文章持久化链接" class="headerlink" title="3.3 设置博客文章持久化链接"></a>3.3 设置博客文章持久化链接</h2><p>安装 <code>hexo-abbrlink</code> 插件 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>
<p>站点配置文件 <code>hexo/_config.yml</code> 修改 <code>permalink</code> 选项，添加下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: post&#x2F;:abbrlink&#x2F;</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32   # 算法：crc16(default) and crc32</span><br><span class="line">  rep: hex # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure>
<p>需要注意，如果 <code>permalink</code> 设置为 <code>post/:abbrlink.html</code> 可能导致本地图片加载失败</p>
<h2 id="3-4-增加关于、标签、分类页面"><a href="#3-4-增加关于、标签、分类页面" class="headerlink" title="3.4 增加关于、标签、分类页面"></a>3.4 增加关于、标签、分类页面</h2><p>主题配置文件 <code>next.yml</code> 修改 <code>menu</code>，将 <code>about</code>、<code>tags</code>、<code>categories</code> 的注释去除。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || fa fa-home</span><br><span class="line">  about: &#x2F;about&#x2F; || fa fa-user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || fa fa-th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || fa fa-archive</span><br></pre></td></tr></table></figure>
<p>1、新建一个分类页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure>
<p>2、你会发现你的<code>source</code>文件夹下有了<code>categorcies/index.md</code>，打开<code>index.md</code>文件进行编辑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 分类</span><br><span class="line"> date: 你的时间,会自动创建.</span><br><span class="line"> type: &quot;categories&quot;</span><br><span class="line"> comments: false</span><br></pre></td></tr></table></figure>
<p>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将categorcies取消注释<br>4、把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中<br>例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 分类测试文章标题</span><br><span class="line">categories: 分类名</span><br></pre></td></tr></table></figure>
<p>1、新建一个标签页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure>
<p>2、你会发现你的<code>source</code>文件夹下有了<code>tags/index.md</code>，打开<code>index.md</code>文件进行编辑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 你的时间,会自动创建.</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>
<p>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将tags取消注释<br>4、把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中<br>举个栗子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签测试文章标题</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p><strong>添加多个标签注意不要在第一行写</strong></p>
<p>1、新建一个关于页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure>
<p>2、你会发现你的<code>source</code>文件夹下有了<code>about/index.md</code>，打开<code>index.md</code>文件即可编辑关于你的信息，可以随便编辑。<br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将about取消注释</p>
<p>4、进行内容编辑</p>
<h2 id="3-5-添加搜索功能"><a href="#3-5-添加搜索功能" class="headerlink" title="3.5 添加搜索功能"></a>3.5 添加搜索功能</h2><p>安装 <code>exo-generator-searchdb</code> 插件 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>主题配置文件 <code>next.yml</code> 添加 <code>search</code> 选项，修改 <code>local_search</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<h2 id="3-6-回到顶部按钮"><a href="#3-6-回到顶部按钮" class="headerlink" title="3.6 回到顶部按钮"></a>3.6 回到顶部按钮</h2><p>修改主题配置文件 <code>next.yml</code> <code>back2top</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # 将返回按钮设置在侧边栏</span><br><span class="line">  sidebar: false</span><br><span class="line">  # 按钮上显示进度百分比</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure>
<h2 id="3-7-设置字数统计和预计阅读时间"><a href="#3-7-设置字数统计和预计阅读时间" class="headerlink" title="3.7 设置字数统计和预计阅读时间"></a>3.7 设置字数统计和预计阅读时间</h2><p>安装 <code>hexo-symbols-count-time</code> 插件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>
<p>编辑站点配置文件 <code>hexo/_config.yml</code>，添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true </span><br><span class="line">  time: true </span><br><span class="line">  total_symbols: true </span><br><span class="line">  total_time: true </span><br></pre></td></tr></table></figure>
<p>修改主题配置文件 <code>next.yml</code> 中 <code>symbols_count_time</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true </span><br><span class="line">  item_text_post: true </span><br><span class="line">  item_text_total: true </span><br><span class="line">  awl: 2</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure>
<h2 id="3-8-标签云特效"><a href="#3-8-标签云特效" class="headerlink" title="3.8 标签云特效"></a>3.8 标签云特效</h2><p>安装 <code>hexo-tag-cloud</code> 插件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-cloud@^2.0.* --save</span><br></pre></td></tr></table></figure>
<p>在 <code>hexo/source/_data</code> 目录下新建 <code>sidebar.swig</code> 文件，输入下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;&#x2F;js&#x2F;tagcloud.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;&#x2F;js&#x2F;tagcanvas.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;widget-wrap&quot;&gt;</span><br><span class="line">    &lt;h3 class&#x3D;&quot;widget-title&quot;&gt;标签云&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;myCanvasContainer&quot; class&#x3D;&quot;widget tagcloud&quot;&gt;</span><br><span class="line">        &lt;canvas width&#x3D;&quot;250&quot; height&#x3D;&quot;250&quot; id&#x3D;&quot;resCanvas&quot; style&#x3D;&quot;width&#x3D;100%&quot;&gt;</span><br><span class="line">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">        &lt;&#x2F;canvas&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>主题配置文件 <code>next.yml</code> 去除 <code>sidebar.swig</code> 的注释。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar: source&#x2F;_data&#x2F;sidebar.swig</span><br></pre></td></tr></table></figure>
<p>主题配置文件 <code>next.yml</code> 添加下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 标签云</span><br><span class="line">tag_cloud:</span><br><span class="line">    textFont: Trebuchet MS, Helvetica</span><br><span class="line">    textColor: &#39;#333&#39;</span><br><span class="line">    textHeight: 25</span><br><span class="line">    outlineColor: &#39;#E2E1D1&#39;</span><br><span class="line">    maxSpeed: 0.1</span><br></pre></td></tr></table></figure>
<h2 id="3-9-设置代码块复制和代码高亮"><a href="#3-9-设置代码块复制和代码高亮" class="headerlink" title="3.9 设置代码块复制和代码高亮"></a>3.9 设置代码块复制和代码高亮</h2><p>主题配置文件 <code>next.yml</code> 中修改 <code>codeblock</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # 代码高亮</span><br><span class="line">  highlight_theme: night bright</span><br><span class="line">  # 复制</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # 显示文本复制结果</span><br><span class="line">    show_result: true</span><br><span class="line">    # 可以选择的样式: default | flat | mac</span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>
<h2 id="3-10-修改文章内链接文本样式"><a href="#3-10-修改文章内链接文本样式" class="headerlink" title="3.10 修改文章内链接文本样式"></a>3.10 修改文章内链接文本样式</h2><p>在 <code>hexo/source/_data</code> 目录下新建 <code>styles.styl</code> 文件，填入下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改链接样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #ff106c;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a, span.exturl &#123;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #ff106c;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主题配置文件 <code>next.yml</code> 去除 <code>styles.styl</code> 的注释。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">style: source&#x2F;_data&#x2F;styles.styl</span><br></pre></td></tr></table></figure>
<h2 id="3-10-在文章底部增加版权信息"><a href="#3-10-在文章底部增加版权信息" class="headerlink" title="3.10 在文章底部增加版权信息"></a>3.10 在文章底部增加版权信息</h2><p>主题配置文件 <code>next.yml</code> 修改 <code>creative_commons</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false # 不显示在侧边栏</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>
<h2 id="3-11-修改文章底部-tag-图标"><a href="#3-11-修改文章底部-tag-图标" class="headerlink" title="3.11 修改文章底部 tag 图标"></a>3.11 修改文章底部 tag 图标</h2><p>主题配置文件 <code>next.yml</code>，打开底部标签 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure>
<h2 id="3-12-目录设置"><a href="#3-12-目录设置" class="headerlink" title="3.12 目录设置"></a>3.12 目录设置</h2><p>主题配置文件 <code>next.yml</code>，修改 <code>toc</code> 属性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # 自动编号</span><br><span class="line">  number: false</span><br><span class="line">  # 超出宽度跨行</span><br><span class="line">  wrap: true</span><br><span class="line">  # 展开所有</span><br><span class="line">  expand_all: true</span><br><span class="line">  # 最大标题深度</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>
<h2 id="3-13-修改主题页面布局为圆角"><a href="#3-13-修改主题页面布局为圆角" class="headerlink" title="3.13 修改主题页面布局为圆角"></a>3.13 修改主题页面布局为圆角</h2><p>在 <code>hexo/source/_data</code> 目录下新建 <code>variables.styl</code> 文件，填写下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 圆角设置</span><br><span class="line">$border-radius-inner     &#x3D; 20px 20px 20px 20px;</span><br><span class="line">$border-radius           &#x3D; 20px;</span><br></pre></td></tr></table></figure>
<p>主题配置文件 <code>next.yml</code> 去除 <code>variables.styl</code> 的注释。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">variable: source&#x2F;_data&#x2F;variables.styl</span><br></pre></td></tr></table></figure>
<h2 id="3-14-隐藏底部的强力驱动"><a href="#3-14-隐藏底部的强力驱动" class="headerlink" title="3.14 隐藏底部的强力驱动"></a>3.14 隐藏底部的强力驱动</h2><p>主题配置文件 <code>next.yml</code> 修改 <code>footer</code> 选项下的 <code>powered</code> 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Powered by Hexo &amp; NexT</span><br><span class="line">  powered: false</span><br></pre></td></tr></table></figure>
<h2 id="3-15-文章加密"><a href="#3-15-文章加密" class="headerlink" title="3.15 文章加密"></a>3.15 文章加密</h2><p>请注意，可能导致文章目录不显示。</p>
<p>安装 <code>hexo-blog-encrypt</code> 插件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt --save</span><br></pre></td></tr></table></figure>
<p>在需要加密的文章中添加下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: 123456</span><br><span class="line">abstract: 加密文章，请输入密码 123456 查看</span><br><span class="line">message: 请输入密码</span><br></pre></td></tr></table></figure>
<h2 id="3-16-提示块-note"><a href="#3-16-提示块-note" class="headerlink" title="3.16 提示块 - note"></a>3.16 提示块 - note</h2><p>主题配置文件 <code>next.yml</code> 中 <code>note</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">note:</span><br><span class="line">  style: simple</span><br><span class="line">  # 是否显示图标</span><br><span class="line">  icons: true </span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure>
<h2 id="3-17-设置博客背景图片"><a href="#3-17-设置博客背景图片" class="headerlink" title="3.17 设置博客背景图片"></a>3.17 设置博客背景图片</h2><ul>
<li>找到CSS存放位置： </li>
</ul>
<p><img src="/post/b24ce228/Users\s1mpleQAQ\AppData\Roaming\Typora\typora-user-images\image-20210214210504664.png" alt="image-20210214210504664"></p>
<p>新建 <code>_other.styl</code> 文件，用来存放自己后面添加的CSS样式</p>
<ul>
<li><p>打开主要CSS文件 <code>main.styl</code> ，引入<code>_other.styl</code> CSS样式文件，添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;个人添加</span><br><span class="line">@import &quot;_other.styl&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/post/b24ce228/Users\s1mpleQAQ\AppData\Roaming\Typora\typora-user-images\image-20210214211558095.png" alt="image-20210214211558095"></p>
</li>
<li><p>插入博客背景的CSS样式到<code>_other.styl</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;背景图片</span><br><span class="line">body &#123;</span><br><span class="line">    background:url(&#x2F;images&#x2F;background.png);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-size: cover;</span><br><span class="line">    background-position:50% 50%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>代码中url的链接就是你想要替换的博客背景图片链接，建议上传到图床，然后粘贴上去。</p>
</li>
</ul>
<h2 id="3-18-设置博客文章透明度"><a href="#3-18-设置博客文章透明度" class="headerlink" title="3.18 设置博客文章透明度"></a>3.18 设置博客文章透明度</h2><p>插入半透明的CSS样式到<code>_other.styl</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//博客内容透明化</span></span><br><span class="line"><span class="comment">//文章内容的透明度设置</span></span><br><span class="line">.content-wrap &#123;</span><br><span class="line">  opacity: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//侧边框的透明度设置</span></span><br><span class="line">.sidebar &#123;</span><br><span class="line">  opacity: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单栏的透明度设置</span></span><br><span class="line">.header-inner &#123;</span><br><span class="line">  background: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//搜索框（local-search）的透明度设置</span></span><br><span class="line">.popup &#123;</span><br><span class="line">  opacity: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>0.9代表透明度为90%，这个可以自己设置，当然不要设置的太低，要不文章看不见了。</p>
<h2 id="3-19-顶部阅读进度条"><a href="#3-19-顶部阅读进度条" class="headerlink" title="3.19 顶部阅读进度条"></a>3.19 顶部阅读进度条</h2><p>主题配置文件 <code>next.yml</code> 中修改 <code>reading_progress</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line">  # 显示在顶部</span><br><span class="line">  position: top</span><br><span class="line">  color: &quot;#06d633&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure>
<h2 id="3-20-文章阴影"><a href="#3-20-文章阴影" class="headerlink" title="3.20 文章阴影"></a>3.20 文章阴影</h2><p>在 <code>hexo/source/_data/styles.styl</code> 中添加下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 文章阴影</span><br><span class="line">.post &#123;</span><br><span class="line">   margin-top: 50px;</span><br><span class="line">   margin-bottom: 50px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-21-修改分类页面样式"><a href="#3-21-修改分类页面样式" class="headerlink" title="3.21 修改分类页面样式"></a>3.21 修改分类页面样式</h2><p>在 <code>hexo/source/_data/styles.styl</code> 添加下面内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#x2F;&#x2F; 分类&amp;&amp;标签 页面样式</span><br><span class="line">.post-block.page &#123;</span><br><span class="line">    margin-top: 40px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 分类页面page</span><br><span class="line">.category-all-page &#123;</span><br><span class="line">    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);</span><br><span class="line">    background-color: #797D7F;</span><br><span class="line">    padding: 20px 30px 60px 30px;</span><br><span class="line">    border-radius: 25px 25px 25px 25px;</span><br><span class="line">&#125;</span><br><span class="line">.category-all-title &#123;</span><br><span class="line">    font-family: Impact;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">    color: aqua;</span><br><span class="line">&#125;</span><br><span class="line">.category-list &#123;</span><br><span class="line">    overflow: auto;</span><br><span class="line">&#125;</span><br><span class="line">.category-list li &#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    float: left;</span><br><span class="line">    border-right: 3px solid #222;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line">&#125;</span><br><span class="line">.category-all ul li &#123;</span><br><span class="line">    list-style: none!important;</span><br><span class="line">&#125;</span><br><span class="line">.category-list li:last-child &#123;</span><br><span class="line">    border-right: none;</span><br><span class="line">&#125;</span><br><span class="line">.category-list li a &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    color: chartreuse;</span><br><span class="line">    font-family: Helvetica, Verdana, sans-serif;</span><br><span class="line">    &#x2F;&#x2F; text-transform: uppercase;</span><br><span class="line">    -webkit-transition: all 0.5s ease;</span><br><span class="line">    -moz-transition: all 0.5s ease;</span><br><span class="line">    -o-transition: all 0.5s ease;</span><br><span class="line">    -ms-transition: all 0.5s ease;</span><br><span class="line">    transition: all 0.5s ease;</span><br><span class="line">&#125;</span><br><span class="line">.category-list li a:hover &#123;</span><br><span class="line">    color: black;</span><br><span class="line">&#125;</span><br><span class="line">.category-list li.active a &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    color: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-22-设置头像和图标"><a href="#3-22-设置头像和图标" class="headerlink" title="3.22 设置头像和图标"></a>3.22 设置头像和图标</h2><p>将需要设置的头像和图标放入到 <code>hexo/source/images</code> 文件中，然后修改主题配置文件 <code>next.yml</code> 中 <code>avatar</code> 和 <code>favicon</code> 选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  url: &#x2F;images&#x2F;avatar.png</span><br><span class="line">  # 圆角显示，如果图片长宽比例差距过大，显示的是椭圆</span><br><span class="line">  rounded: true</span><br><span class="line">  # 方形显示</span><br><span class="line">  rotated: false</span><br><span class="line">Code</span><br><span class="line"># 填写自己的图片</span><br><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon.ico</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon.ico</span><br><span class="line">  apple_touch_icon: &#x2F;images&#x2F;favicon.ico</span><br><span class="line">  safari_pinned_tab: &#x2F;images&#x2F;favicon.ico</span><br></pre></td></tr></table></figure>
<h2 id="3-23-侧边栏社交链接"><a href="#3-23-侧边栏社交链接" class="headerlink" title="3.23 侧边栏社交链接"></a>3.23 侧边栏社交链接</h2><p>修改主题配置文件 <code>next.yml</code> 中 <code>social</code> 选项 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || fab fa-github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br></pre></td></tr></table></figure>
<h2 id="3-24-阅读全文按钮样式"><a href="#3-24-阅读全文按钮样式" class="headerlink" title="3.24 阅读全文按钮样式"></a>3.24 阅读全文按钮样式</h2><p>next 在需要显示摘要的地方加上 <code>&lt;!--more--&gt;</code> ，就不会显示全文，在 <code>hexo/source/_data/styles.styl</code> 中写入下面内容，修改默认的 Read More 按钮样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; [Read More]按钮样式</span><br><span class="line">.post-button .btn &#123;</span><br><span class="line">    color: #555 !important;</span><br><span class="line">    background-color: rgb(255, 255, 255);</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);</span><br><span class="line">    border: none !important;</span><br><span class="line">    transition-property: unset;</span><br><span class="line">    padding: 0px 15px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.post-button .btn:hover &#123;</span><br><span class="line">    color: rgb(255, 255, 255) !important;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);</span><br><span class="line">    background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-25-更改新建文章的模板"><a href="#3-25-更改新建文章的模板" class="headerlink" title="3.25 更改新建文章的模板"></a>3.25 更改新建文章的模板</h2><p>默认新建文章没有分类这个选项，需要自己填写，现在修改 <code>hexo/scaffolds/post.md</code> 文件 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br></pre></td></tr></table></figure>
<h2 id="3-26-去掉顶部黑线"><a href="#3-26-去掉顶部黑线" class="headerlink" title="3.26 去掉顶部黑线"></a>3.26 去掉顶部黑线</h2><p>在 <code>hexo/source/_data/styles.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#x2F;&#x2F;去掉顶部黑线：</span><br><span class="line">.headband &#123;display:none;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-27-选中颜色"><a href="#3-27-选中颜色" class="headerlink" title="3.27 选中颜色"></a>3.27 选中颜色</h2><p>修改选择文字的颜色，在 <code>hexo/source/_data/styles.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改选中字符的颜色</span><br><span class="line">&#x2F;* webkit, opera, IE9 *&#x2F;</span><br><span class="line">::selection &#123; </span><br><span class="line">    background: #06d633;</span><br><span class="line">    color: #f7f7f7; </span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* firefox *&#x2F;</span><br><span class="line">::-moz-selection &#123; </span><br><span class="line">    background: #06d633;</span><br><span class="line">    color: #f7f7f7;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 代码块选中颜色</span><br><span class="line">.highlight *::selection &#123;</span><br><span class="line">    background: #06d633;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-28-设置标题栏背景图片"><a href="#3-28-设置标题栏背景图片" class="headerlink" title="3.28 设置标题栏背景图片"></a>3.28 设置标题栏背景图片</h2><p>在 <code>hexo/source/_data/styles.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 标题栏背景图片</span><br><span class="line">.site-brand-container &#123; </span><br><span class="line">  background-image: url(&#x2F;images&#x2F;log-small.png);</span><br><span class="line">  background-size: 100% 100%;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-29-标签页面样式"><a href="#3-29-标签页面样式" class="headerlink" title="3.29 标签页面样式"></a>3.29 标签页面样式</h2><p>在 <code>hexo/source/_data/styles.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.tag-cloud a &#123;</span><br><span class="line">    box-shadow: 0 1px 3px #6f42c1, 0 1px 2px #d9534f;</span><br><span class="line">    padding: 2px 10px;</span><br><span class="line">    margin: 8px;</span><br><span class="line">    background: rgba(193,66,92,0);</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-radius: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-30-代码行美化"><a href="#3-30-代码行美化" class="headerlink" title="3.30 代码行美化"></a>3.30 代码行美化</h2><p>在 <code>hexo/source/_data/styles.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 代码行样式</span><br><span class="line">code&#123;</span><br><span class="line">  background: #555;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-31-文章字体大小"><a href="#3-31-文章字体大小" class="headerlink" title="3.31 文章字体大小"></a>3.31 文章字体大小</h2><p>在 <code>hexo/source/_data/variables.styl</code> 文件加入下面样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$font-size-base          &#x3D; 0.9em;</span><br></pre></td></tr></table></figure>
<h2 id="3-32-设置canvas-ribbon动态背景"><a href="#3-32-设置canvas-ribbon动态背景" class="headerlink" title="3.32 设置canvas_ribbon动态背景"></a>3.32 设置canvas_ribbon动态背景</h2><p>进入到 <code>themes/next</code> 目录下，安装 <code>theme-next-canvas-ribbon</code> 模块到 <code>source/lib</code> 目录下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-canvas-ribbon source&#x2F;lib&#x2F;canvas-ribbon</span><br></pre></td></tr></table></figure>
<p>编辑 <code>hexo/source/_data/next.yml</code> 主题配置文件，启用 <code>canvas_ribbon</code> 模块。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br><span class="line">  size: 300 # The width of the ribbon</span><br><span class="line">  alpha: 0.6 # The transparency of the ribbon</span><br><span class="line">  zIndex: -1 # The display level of the ribbon</span><br></pre></td></tr></table></figure>
<p>作用不大，没有启用，多数博主也不推荐使用。</p>
<h2 id="3-33-安装-hexo-neat-插件"><a href="#3-33-安装-hexo-neat-插件" class="headerlink" title="3.33 安装 hexo-neat 插件"></a>3.33 安装 hexo-neat 插件</h2><p>首先安装 <code>hexo-neat</code> 插件，在博客根目录输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>
<p>编辑 <code>hexo/source/_data/next.yml</code> 主题配置文件，添加下面配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 博文压缩</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#39;**&#x2F;*.min.css&#39;</span><br><span class="line"># 压缩js</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &#39;**&#x2F;*.min.js&#39;</span><br><span class="line">    - &#39;**&#x2F;jquery.fancybox.pack.js&#39;</span><br><span class="line">    - &#39;**&#x2F;index.js&#39;</span><br><span class="line">    - &#39;**&#x2F;fireworks.js&#39;</span><br></pre></td></tr></table></figure>
<h2 id="3-34首页顶部留白"><a href="#3-34首页顶部留白" class="headerlink" title="3.34首页顶部留白"></a>3.34首页顶部留白</h2><p>顶部留白个人感觉更好看，同样找到<code>_other.styl</code>（之前自己加的，可以看此篇文章开头）</p>
<p>效果：</p>
<p><img src="/post/b24ce228/Users\s1mpleQAQ\AppData\Roaming\Typora\typora-user-images\image-20210214211010556.png" alt="image-20210214211010556"></p>
<p>加上如下代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首页顶部留白</span></span><br><span class="line">.container&#123;margin-top:10px;&#125; </span><br></pre></td></tr></table></figure>
<h2 id="3-35首页banner渐变色"><a href="#3-35首页banner渐变色" class="headerlink" title="3.35首页banner渐变色"></a>3.35首页banner渐变色</h2><p>效果：</p>
<p><img src="/post/b24ce228/Users\s1mpleQAQ\AppData\Roaming\Typora\typora-user-images\image-20210214211024652.png" alt="image-20210214211024652"></p>
<p>修改<code>_other.styl</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首页banner渐变色</span></span><br><span class="line">.site-brand-container &#123;</span><br><span class="line">    background: linear-gradient(200deg, #2e80a5, #0c0c0b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>颜色可以自己选</p>
<h2 id="3-36设置所有边框为圆角"><a href="#3-36设置所有边框为圆角" class="headerlink" title="3.36设置所有边框为圆角"></a>3.36设置所有边框为圆角</h2><p>打开文件，路径：\themes\next\source\css_variables\Gemini.styl ，添加以下代码：</p>
<p>ps：Gemini是我用的样式，用哪个样式修改哪个文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改主题页面布局为圆角</span><br><span class="line">$border-radius-inner &#x3D; 15px 15px 15px 15px;</span><br><span class="line">$border-radius &#x3D; 15px;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>用hexo+github pages+独立域名搭建个人博客</title>
    <url>/post/5aeb5456/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>基本环境</p>
<ul>
<li><p>Window10</p>
</li>
<li><p><a href="https://nodejs.org/en/">Node.js</a> （点击进入官网下载）博主版本号为 <strong>Node.js 12.18.2 LTS</strong></p>
<a id="more"></a>

<p><a href="https://pic.heson10.com/img/image-20200708231743517.png"><img src="https://pic.heson10.com/img/image-20200708231743517.png" alt="image-20200708231743517"></a></p>
<p>在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。</p>
</li>
<li><p><a href="https://git-scm.com/downloads">Git</a>（点击进入官网下载）版本号为<strong>2.27.0</strong></p>
<p><a href="https://pic.heson10.com/img/image-20200708231819287.png"><img src="https://pic.heson10.com/img/image-20200708231819287.png" alt="image-20200708231819287"></a></p>
<p><a href="https://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html">GIT安装教程</a></p>
</li>
</ul>
<h2 id="安装Hexo-版本4-2-1"><a href="#安装Hexo-版本4-2-1" class="headerlink" title="安装Hexo (版本4.2.1)"></a>安装Hexo (版本4.2.1)</h2><ul>
<li><p>在任意盘新建hexo文件夹并右键，选择Bit Bash Here，如图：</p>
<p><a href="https://pic.heson10.com/img/image-20200708232535741.png"><img src="https://pic.heson10.com/img/image-20200708232535741.png" alt="image-20200708232535741"></a></p>
</li>
<li><p>输入安装hexo命令</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<ul>
<li>接下来我们对hexo 进行初始化</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo g 或者hexo generate</span><br><span class="line">hexo s 或者hexo server</span><br></pre></td></tr></table></figure>
<p>这样就可以到<a href="http://localhost:4000/">http://localhost:4000/</a> 查看了</p>
<p><strong>2020/11/9日更新：</strong></p>
<p>如果<code>hexo init</code>出现下面报错：</p>
<p><a href="https://picup.heson10.com/img/upyun/2020/11/image-20201109184629487.png"><img src="https://picup.heson10.com/img/upyun/2020/11/image-20201109184629487.png" alt="image-20201109184629487"></a></p>
<p>要挂上梯子才能继续。</p>
<h2 id="Github-设置"><a href="#Github-设置" class="headerlink" title="Github 设置"></a>Github 设置</h2><h3 id="GitHub的优点"><a href="#GitHub的优点" class="headerlink" title="GitHub的优点"></a>GitHub的优点</h3><p>GitHub是基于git实现的代码托管。git可能是目前最好用的版本控制系统了，非常受欢迎。</p>
<p>GitHub可以免费使用，并且快速稳定。</p>
<p>Github上面的世界很精彩，用久了你的眼界会开阔很多。</p>
<h3 id="什么是GitHub-Pages？"><a href="#什么是GitHub-Pages？" class="headerlink" title="什么是GitHub Pages？"></a>什么是GitHub Pages？</h3><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。GitHub Pages 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。</p>
<h3 id="为什么使用GitHub-Pages"><a href="#为什么使用GitHub-Pages" class="headerlink" title="为什么使用GitHub Pages"></a>为什么使用GitHub Pages</h3><p>可以绑定你的域名(但只能绑定一个)。</p>
<p>简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦.</p>
<h3 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h3><ul>
<li><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>在创建博客之前，当然必须有GitHub的帐号，该帐号将用来创建项目，默认的域名username.github.com/projectName 中的username也要用到这个帐号。（请记住username，之后会多次用到）</p>
<p>注意：下面涉及到的一些命令凡是更用户名和项目名有关的一律会用这里的username和projectName代替，注意替换</p>
<p>访问：<a href="https://www.github.com/">https://www.github.com/</a> 注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。比如你的主页上传并构建成功会通过邮箱通知，更重要的是，如果构建失败的话也会在邮件中说明原因。</p>
</li>
<li><h3 id="创建项目仓库"><a href="#创建项目仓库" class="headerlink" title="创建项目仓库"></a>创建项目仓库</h3><p>在创建博客之前，还需要用已有的帐号创建一个项目，上面那个链接的projectName将是这里即将创建的项目名称。</p>
<p>在Git中，项目被称为仓库(Repository)，仓库顾名思义，当然可以包含代码或者非代码。将来我们的网页或者模板实际上都是保存在这个仓库中的。</p>
<p>登录后，访问<a href="https://github.com/new">https://github.com/new</a> ，创建仓库如下图：</p>
<p><a href="https://pic.heson10.com/img/image-20200708235116025.png"><img src="https://pic.heson10.com/img/image-20200708235116025.png" alt="image-20200708235116025"></a></p>
<p><strong>注意Repository name这里一定要填写username.github.io 这样后面才能使用Github Pages功能。</strong></p>
<p>每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。你可以通过<a href="http://username.github.io/">http://username.github.io</a> 来访问你的个人主页。</p>
<p>创建了仓库后，我们就需要管理它，无论是管理本地仓库还是远程仓库都需要Git客户端；Git客户端实际上十分强大，它本身就可以offline的创建本地仓库，而本地仓库和远程仓库之间的同步也是通过Git客户端完成的。</p>
</li>
<li><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><p>上传文件需要配置ssh key，不然无法上传。<br>首先先检查一下本地是否已经存在ssh key,在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<p>设置你的那么和email（如果你安装git时已经有了这步操作就跳过，name可以随意，但最好设置成你的github的name防止遗忘。邮箱与你的github邮箱没什么关系，但是最好写为同一个，好记住）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;name&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure></li>
<li><h3 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h3><p>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;XXXXX@163.com&quot; </span><br></pre></td></tr></table></figure>
<p>一路回车就可以了，如果设置了密码就记住。</p>
<p>这一步在~/.ssh/下生成了两个文件id_rsa 和 id_rsa.pub</p>
</li>
<li><h3 id="获取key"><a href="#获取key" class="headerlink" title="获取key"></a>获取key</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>然后拷贝key（key是以ssr（应该是这个开头的）开头 你的邮箱结尾的一长串字符。</p>
</li>
<li><h3 id="在GitHub上添加SSH密钥"><a href="#在GitHub上添加SSH密钥" class="headerlink" title="在GitHub上添加SSH密钥"></a>在GitHub上添加SSH密钥</h3><p>在<a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 下 add new ssh key</p>
<p><a href="https://pic.heson10.com/img/image-20200708235604290.png"><img src="https://pic.heson10.com/img/image-20200708235604290.png" alt="image-20200708235604290"></a></p>
<p>title可随意填写，key就是我们拷贝的key</p>
<p>接下来测试一下是否配置正确。</p>
<p>输入一下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>
<p>成功后大概会出现一下内容：（可能会有部分不一致）</p>
<p><a href="https://pic.heson10.com/img/image-20200708235845417.png"><img src="https://pic.heson10.com/img/image-20200708235845417.png" alt="image-20200708235845417"></a></p>
</li>
</ul>
<h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><ul>
<li><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><p>编辑 你所建立的hexo文件夹中_config.yml（用记事本打开）修改deployment部分。</p>
<p><a href="https://pic.heson10.com/img/image-20200708235946378.png"><img src="https://pic.heson10.com/img/image-20200708235946378.png" alt="image-20200708235946378"></a></p>
<p>自行替换成你的GitHub的名称。注意：每个：后面必须有一个空格！！！</p>
</li>
<li><h3 id="安装Git包"><a href="#安装Git包" class="headerlink" title="安装Git包"></a>安装Git包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
<li><h3 id="部署到GitHub上"><a href="#部署到GitHub上" class="headerlink" title="部署到GitHub上"></a>部署到GitHub上</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure>
<p>现在我们可以通过访问 <a href="http://username.github.io/">http://username.github.io/</a> 来访问我们自己的博客啦,可以看到我们的博客已成功搭建，接下来就是一些主题的优化和配置呢。</p>
</li>
</ul>
<h2 id="如何添加一篇文章"><a href="#如何添加一篇文章" class="headerlink" title="如何添加一篇文章"></a>如何添加一篇文章</h2><p>新建一篇博文可通过以下的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new </span><br></pre></td></tr></table></figure>
<h2 id="HEXO主题"><a href="#HEXO主题" class="headerlink" title="HEXO主题"></a>HEXO主题</h2><p>推荐使用next</p>
<h2 id="关于Markdown编辑器"><a href="#关于Markdown编辑器" class="headerlink" title="关于Markdown编辑器"></a>关于Markdown编辑器</h2><p>推荐使用Typora这一款，试用了一段时间，非常符合我的预期。</p>
<p>加上现在Typora可以联合Picgo实现快速上传图片到图床，简直是神器。放出截图：</p>
<ul>
<li><p>Typora截图</p>
<p><a href="https://pic.heson10.com/img/image-20200709000943792.png"><img src="https://pic.heson10.com/img/image-20200709000943792.png" alt="image-20200709000943792"></a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>github创建个人访问令牌</title>
    <url>/post/74d482c9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="GitHub-创建个人访问令牌"><a href="#GitHub-创建个人访问令牌" class="headerlink" title="GitHub 创建个人访问令牌"></a>GitHub 创建个人访问令牌</h1><p>2020-08-31 16:39 更新</p>
<p>您应该通过命令行或 API 创建个人访问令牌来代替密码。</p>
<p>在使用<a href="https://docs.github.com/cn/v3/auth/#via-oauth-and-personal-access-tokens">GitHub API</a>或命令行时，可使用个人访问令牌 (PAT) 代替密码向 GitHub 进行身份验证。</p>
<p>如果要使用 PAT 访问使用 SAML SSO 的组织所拥有的资源，则必须授权 PAT。 更多信息请参阅“<a href="(https://www.w3cschool.cn/githubcn/githubcn-q8r93acx.html">关于使用 SAML 单点登录进行身份验证</a>”和“<a href="https://www.w3cschool.cn/githubcn/githubcn-3g943acz.html">授权个人访问令牌用于 SAML 单点登录</a>”。</p>
<p>作为安全预防措施，GitHub 会自动删除一年内未使用过的个人访问令牌。</p>
<a id="more"></a>



<h3 id="创建令牌"><a href="#创建令牌" class="headerlink" title="创建令牌"></a>创建令牌</h3><ol>
<li><a href="https://www.w3cschool.cn/githubcn/githubcn-f3l73aah.html">验证您的电子邮件地址</a>（如果尚未验证）。</li>
</ol>
<ol>
<li>在任何页面的右上角，单击您的个人资料照片，然后单击 <strong>Settings（设置）</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003532701778.png" alt="用户栏中的 Settings 图标"></p>
<ol>
<li>在左侧边栏中，单击 <strong>Developer settings</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003539369603.png" alt="开发者设置"></p>
<ol>
<li>在左侧边栏中，单击 <strong>Personal access tokens（个人访问令牌）</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003545995040.png" alt="个人访问令牌"></p>
<ol>
<li>单击 <strong>Generate new token（生成新令牌）</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003552731520.png" alt="生成新令牌按钮"></p>
<ol>
<li>给令牌一个描述性名称。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003559583850.png" alt="令牌说明字段"></p>
<ol>
<li>选择要授予此令牌的作用域或权限。 要使用令牌从命令行访问仓库，请选择 <strong>repo（仓库）</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003566157473.gif" alt="选择令牌作用域"></p>
<ol>
<li>单击 <strong>Generate token（生成令牌）</strong>。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003573201357.png" alt="生成令牌按钮"></p>
<ol>
<li>单击 <img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003517998063.png" alt="save">将令牌复制到剪贴板。 出于安全原因，离开此页面后，您将无法再次看到令牌。</li>
</ol>
<p><img src="https://atts.w3cschool.cn/attachments/image/20200821/1598003582296572.png" alt="新创建的令牌"></p>
<blockquote>
<p><strong>警告：</strong> 像对待密码一样对待您的令牌，确保其机密性。 使用 API 时，应将令牌用作环境变量，而不是将其硬编码到程序中。</p>
</blockquote>
<ol>
<li>要使用令牌向实施 SAML SSO 的组织验证，<a href="https://www.w3cschool.cn/githubcn/githubcn-3g943acz.html">请授权该令牌用于 SAML 单点登录组织</a>。</li>
</ol>
<h3 id="在命令行上使用令牌"><a href="#在命令行上使用令牌" class="headerlink" title="在命令行上使用令牌"></a>在命令行上使用令牌</h3><p>如果您有令牌，则可以在通过 HTTPS 执行 Git 操作时输入令牌，而不是密码。</p>
<p>例如，在命令行中输入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;repo.gitUsername: your_usernamePassword: your_token</span><br></pre></td></tr></table></figure>
<p>个人访问令牌只能用于 HTTPS Git 操作。 如果您的仓库使用 SSH 远程 URL，则需要<a href="https://www.w3cschool.cn/githubcn/githubcn-meyb3akx.html">将远程 URL 从 SSH 切换到 HTTPS</a>。</p>
<p>如果没有提示您输入用户名和密码，说明您的凭据可能已缓存在计算机上。 您可以<a href="https://www.w3cschool.cn/githubcn/githubcn-ny6k3akm.html">在密钥链中更新您的凭据</a>，用令牌替换您的旧密码。</p>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>github个人令牌</tag>
      </tags>
  </entry>
  <entry>
    <title>看板娘设置(2)</title>
    <url>/post/cf4ab21c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="看板娘安装教程"><a href="#看板娘安装教程" class="headerlink" title="看板娘安装教程"></a>看板娘安装教程</h3><p>1、把大神已修改好的代码托管在Github <a href="https://github.com/stevenjoezhang/live2d-widget">源码</a>  下载到hexo目录下的<code>/themes/icarus/source</code>下,                  下载好的文件名<code>live2d-widget</code> </p>
<p>2、进入<code>live2d-widget</code> 修改`autoload.js’</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 把这个替换掉</span><br><span class="line">const live2d_path &#x3D; &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget&#x2F;&quot;;</span><br><span class="line">&#x2F;&#x2F; 替换为</span><br><span class="line">const live2d_path &#x3D; &quot;&#x2F;live2d-widget&#x2F;&quot;;</span><br></pre></td></tr></table></figure>
<p>这个<code>live2d_path</code>是指刚才下载的源码存放的目录，在<code>icarus</code>中就会以<code>hexo/theme/icarus/source</code> 为根目录 ，刚才下载的源码放在这个位置所以这里的<code>live2d_path</code> 就是源码存放的位置</p>
<p>3.重点！！！！</p>
<p>在<code>/themes/icarus/layout</code> 中编辑 <code>layout.ejs</code> 加入以下依赖到<code>&lt;head&gt;&lt;/head&gt;</code>内 再次申明博主锁使用的是<code>icarus</code> 主题 如果是<code>Next</code> 主题则对应的文件是 <code>/themes/next/layout/_layout.swig</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>4、编辑主题的配置文件<code>_config.yml</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<p>5.保存之后执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 查看效果</p>
<h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3>]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>看板娘</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+next+看板娘设置（1)</title>
    <url>/post/d1da4e15/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-Fork看板娘项目到自己的Github"><a href="#1-Fork看板娘项目到自己的Github" class="headerlink" title="1. Fork看板娘项目到自己的Github"></a>1. Fork看板娘项目到自己的Github</h1><p>Hexo博客本身是支持看板娘的，但是原本的只有一个人物，一点也不好玩，stevenjoezhang大佬写了一个可以说话，可以换装的看板娘项目并开源，使用起来也是非常的方便。</p>
<a id="more"></a>

<p>首先访问 <a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a> 的 Github 仓库，点击右上角 <code>Fork</code> 该项目到自己的仓库：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L2JpMlB4eThoRldqUy5wbmc" alt="mark"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L3RTTVZJb0p2b3ZVaC5wbmc" alt="mark"></p>
<h1 id="2-向-Next-中添加看板娘"><a href="#2-向-Next-中添加看板娘" class="headerlink" title="2. 向 Next 中添加看板娘"></a>2. 向 Next 中添加看板娘</h1><p>修改 <code>/themes/hexo-theme-next/layout/_layout.swing</code> 文件，在最后添加下面这行代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：请将CDN链接中的 <code>Mculover666</code> 换成你的用户名！</p>
</blockquote>
<h1 id="3-使能看板娘"><a href="#3-使能看板娘" class="headerlink" title="3. 使能看板娘"></a>3. 使能看板娘</h1><p>编辑<strong>主题配置文件</strong> <code>/themes/hexo-theme-next/_config.yml</code>，添加如下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># 自定义看板娘</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">12345</span><br></pre></td></tr></table></figure>
<p>这个时候重新生成并部署博客，就可以看到博客左下角出现一个看板娘了哈哈。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L21TUXFLdXNhRkFkci5naWY#pic_center" alt="mark"></p>
<p><strong>这个看板娘是默认的，在左下角，如果想要修改它的位置，大小，说话内容，该如何办呢？</strong></p>
<h1 id="4-定制一个属于你自己的看板娘"><a href="#4-定制一个属于你自己的看板娘" class="headerlink" title="4. 定制一个属于你自己的看板娘"></a>4. 定制一个属于你自己的看板娘</h1><p>第 1 步中我们fork了看板娘项目到自己的 Github 中，然后使用CDN方式部署到了Hexo博客中，接下来讲述如何进行修改，定制一个属于你自己的看板娘~</p>
<h2 id="clone-你的项目到本地"><a href="#clone-你的项目到本地" class="headerlink" title="clone 你的项目到本地"></a>clone 你的项目到本地</h2><p>将项目 clone 到本地：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Mculover666/live2d-widget.git</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意是 clone 你自己的 Github 中的看板娘项目!</p>
</blockquote>
<h2 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h2><p>首先说明一下看板娘项目中几个文件的作用：</p>
<ul>
<li><code>autoload.js</code>：自动加载看板娘；</li>
<li><code>waifu.css</code>：看板娘样式；</li>
<li><code>waifu-tips.js</code>：看板娘说话的脚本；</li>
<li><code>waifu-tips.json</code>：看板娘说话的内容；</li>
</ul>
<h3 id="修改加载看板娘的路径（必须）"><a href="#修改加载看板娘的路径（必须）" class="headerlink" title="修改加载看板娘的路径（必须）"></a>修改加载看板娘的路径（必须）</h3><p>在 <code>autoload.js</code> 的开头定义了加载看板娘的路径，注意这里需要使用绝对路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;注意：live2d_path参数应使用绝对路径</span><br><span class="line">const live2d_path &#x3D; &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Mculover666&#x2F;live2d-widget&#x2F;&quot;;</span><br><span class="line">&#x2F;&#x2F;const live2d_path &#x3D; &quot;&#x2F;live2d-widget&#x2F;&quot;;</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：将CDN路径中的 <code>Mculover666</code> 改为你自己的Github用户名。</p>
</blockquote>
<h3 id="修改看板娘布局和样式"><a href="#修改看板娘布局和样式" class="headerlink" title="修改看板娘布局和样式"></a>修改看板娘布局和样式</h3><p>在 <code>waifu.css</code> 中修改：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L1dpOU1udlhibTlTWS5wbmc#pic_center" alt="mark"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L0t2Rm1wazVyc3pIaS5wbmc#pic_center" alt="mark"></p>
<p>更多的修改可以自行修改哦~</p>
<h3 id="暂存提交推送三连"><a href="#暂存提交推送三连" class="headerlink" title="暂存提交推送三连"></a>暂存提交推送三连</h3><p>修改完成后，将修改暂存，然后提交，最后<strong>一定要推送到远程库</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;modify position to right&quot;</span></span><br><span class="line">git push origin master</span><br><span class="line">1234</span><br></pre></td></tr></table></figure>
<h3 id="发布新版本"><a href="#发布新版本" class="headerlink" title="发布新版本"></a>发布新版本</h3><p>我们是使用了Github免费的CDN服务，所以还需要发布一个新的版本：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L09wMlFtVUxMQVdKNi5wbmc" alt="mark"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L1NzbkJlZnNpZzNQYS5wbmc" alt="mark"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L2t2TXNBY1Y5d2M5MC5wbmc" alt="mark"></p>
<h3 id="修改CDN链接"><a href="#修改CDN链接" class="headerlink" title="修改CDN链接"></a>修改CDN链接</h3><p>Github上CDN的使用方式为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>所以在博客中的<code>/themes/hexo-theme-next/layout/_layout.swing</code>文件中修改CDN链接使用最新的版本：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Mculover666/live2d-widget@1.0.0/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="重新生成部署博客"><a href="#重新生成部署博客" class="headerlink" title="重新生成部署博客"></a>重新生成部署博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<p>来看看效果哈哈哈，看板娘已经成功的跑到了右边：<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL21jdWxvdmVyNjY2LmNuL2ltYWdlLzIwMTkwODE4L3RZUXlNcGhCeTUxei5wbmc" alt="mark"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>看板娘</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>java环境配置</title>
    <url>/post/e06ceb34/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-JDK的下载"><a href="#1-JDK的下载" class="headerlink" title="1.JDK的下载"></a><strong>1.JDK的下载</strong></h1><p>在Oracle官网可以下载JDK（Java Development Kit）中文叫java工具集，因为官网的资料是一手的所以建议大家从官网获取软件包。从其他地方获取的并非不可靠，但是免费的开源软件包建议大家都从对应的官方网站进行下载。<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">点击链接</a>跳转到对应的页面。选择对应的系统进行下载， </p>
<a id="more"></a>

<p>比如我是windows系统就选择Windows对应的那个JDK。还有，注意下载JDK版本的位数，如果文件名中有32这串数字的话，那代表这个JDK是32位的，现在大多数操作系统都是64位的，所以建议大家下载64位的JDK。还有个小问题，就是大家下载的时候需要把decline变为accpet,这两者的意思大家都明白。</p>
<p><img src="https://img-blog.csdn.net/20180601065559541?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<h1 id="2-JDK的安装"><a href="#2-JDK的安装" class="headerlink" title="2.JDK的安装"></a><strong>2.JDK的安装</strong></h1><p>JDK下载完成之后我们就直接打开下载好的安装程序。（我并未用最新的JDK做演示）</p>
<p><img src="https://img-blog.csdn.net/20180601070039984?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>单击下一步。</p>
<p><img src="https://img-blog.csdn.net/20180601070147339?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>单击更改，到这里我们需要更改一下安装路径，可以是任何一个盘的任何一个不含空格路径的文件夹，为了方便起见我就直接把中间的Program Files给删掉了。效果如下</p>
<p><img src="https://img-blog.csdn.net/20180601070351864?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>然后下一步</p>
<p><img src="https://img-blog.csdn.net/20180601070440728?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>等待进度条加载满会弹出一个选择</p>
<p><img src="https://img-blog.csdn.net/20180601070544844?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>这里我们依然将Program文件路径删除，但是我们发现会有问题</p>
<p><img src="https://img-blog.csdn.net/2018060107073879?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>我的解决思路是在java文件夹下新建一个文件夹取名为jre，然后更改为C:Java\jre</p>
<p><img src="https://img-blog.csdn.net/20180601070851787?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>最后，等待安装完成。</p>
<p><img src="https://img-blog.csdn.net/20180601070945289?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p><img src="https://img-blog.csdn.net/20180601070958229?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<h1 id="3-JDK环境变量的配置"><a href="#3-JDK环境变量的配置" class="headerlink" title="3.JDK环境变量的配置"></a><strong>3.JDK环境变量的配置</strong></h1><p>相信大家也有疑惑，我怎么看不见Java的快捷方式图标呢，为什么我的桌面没有Java程序呢，现在让我来告诉你答案。作为开发学习者，我们忽略了一个重要的东西，java是一个开源平台不是提供音视频、聊天的平台（这只是我个人的看法）。简单来说，JDK是一款非常强大的工具集，我们要使用Java的话就需要安装一些支持Java编程软件eclipse、intellj idea等。然后我们进入正题，来配置环境变量。</p>
<p>右击我的电脑-&gt;高级系统设置-&gt;环境变量-&gt;新建系统变量-&gt;将新建系统变量添加到path里面去。</p>
<p><img src="https://img-blog.csdn.net/20180601071804415?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p><img src="https://img-blog.csdn.net/20180601071947532?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>java的安装路径包不要搞混了</p>
<p><img src="https://img-blog.csdn.net/20180601072222390?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>找到Path系统变量，点击编辑，然后点击新建。输入%JAVA_HOME%bin。</p>
<p><img src="https://img-blog.csdn.net/20180601072346832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>完成了之后需要一步一步点确定，直到确定完成才可以说环境变量配置完成。不然的话，就需要重新配置。就好比写Word的时候搞忘了保存而直接关闭，但是word比较人性化退出时候有提示，这个的话需要大家有耐心的做完每一步工作。科普一下，我们如何做到不点击QQ程序图标，就做到命令行打开QQ？找到QQ所在文件夹的bin目录，复制其路径将它添加到Path变量中。由此可得，其他程序亦是如此。</p>
<h1 id="4-检查是否配置成功。"><a href="#4-检查是否配置成功。" class="headerlink" title="4.检查是否配置成功。"></a>4.检查是否配置成功。</h1><p>win+R 输入cmd -&gt; javac -version</p>
<p><img src="https://img-blog.csdn.net/20180601072745378?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>如果出现</p>
<p><img src="https://img-blog.csdn.net/20180601072823546?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODU0ODk2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<p>那么就是环境变量没保存，需要进行步骤3的配置，然后就可以进入java语言的学习了。</p>
]]></content>
  </entry>
  <entry>
    <title>java环境配置</title>
    <url>/post/e06ceb34/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>安装nodejs方式有很多种。</p>
<a id="more"></a>

<p><strong>第一种：官网下载</strong><br> 通过<a href="https://nodejs.org/en/">nodejs官网</a>下载安装 ，但有个缺陷，不同版本的nodejs无法顺利的切换。</p>
<p><strong>第二种: NVM安装</strong><br> NVM可以帮助我们快速切换 node版本。但是安装NVM过程中有很多坑，网上找了很多文档都没解决问题。这里自己总结下，帮助大家顺利安装软件。</p>
<h3 id="一、-下载nvm安装包"><a href="#一、-下载nvm安装包" class="headerlink" title="一、 下载nvm安装包"></a>一、 下载nvm安装包</h3><p><strong>1. 下载地址</strong><br> github上下载最新版本:<a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p>
<p> 推荐下载第三个包：nvm-setup.zip<br><img src="https://img-blog.csdnimg.cn/20190115133257742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol>
<li><p>成功安装的nvm标志<br>命令行：nvm</p>
<p>成功出现下面的代码<br><img src="https://img-blog.csdnimg.cn/2019011513330537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<h3 id="二、配置淘宝镜像"><a href="#二、配置淘宝镜像" class="headerlink" title="二、配置淘宝镜像"></a>二、配置淘宝镜像</h3><p> 由于nvm默认的下载地址<a href="http://nodejs.org/dist/%E6%98%AF%E5%A4%96%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E9%80%9F%E5%BA%A6%E9%9D%9E%E5%B8%B8%E6%85%A2%EF%BC%8C%E5%9B%A0%E8%80%8C%E5%8F%AF%E4%BB%A5%E5%88%87%E6%8D%A2%E5%88%B0%E6%B7%98%E5%AE%9D%E7%9A%84%E9%95%9C%E5%83%8F%EF%BC%8C%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E4%BC%9A%E5%BF%AB%E5%BE%88%E5%A4%9A%E3%80%82">http://nodejs.org/dist/是外国外服务器，速度非常慢，因而可以切换到淘宝的镜像，下载速度会快很多。</a></p>
<p><strong>配置方法：</strong></p>
<p> 打开nvm的安装路径，默认安装路径是：C:\Users\zhong\AppData\Roaming\nvm</p>
<p> 打开settings.txt，加入下面文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	root: C:\Users\zhong\AppData\Roaming\nvm  </span><br><span class="line">	path: C:\Program Files\nodejs </span><br><span class="line">	arch: 64 </span><br><span class="line">	proxy: none</span><br><span class="line">	node_mirror: http:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node&#x2F;</span><br><span class="line">	npm_mirror: https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;npm&#x2F;</span><br><span class="line">123456</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190116125742381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190116125800543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三、-安装node"><a href="#三、-安装node" class="headerlink" title="三、 安装node"></a>三、 安装node</h3><ol>
<li><p><strong>nvm安装命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> nvm  install version    </span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>version就是要安装的nodejs版本，官网可以查询到。</p>
<p>比如：<br>nvm install v11.6.0<br>nvm install 11.6.0</p>
</li>
<li><p><strong>安装过程中关键点：</strong></p>
</li>
</ol>
<p>   Downloading 代表正在下载npm，一定要等下载完，不然会发现npm将无法使用。<br><img src="https://img-blog.csdnimg.cn/20190116130110558.png" alt="在这里插入图片描述"></p>
<p>   Installation complete 代表nodejs安装完成<br><img src="https://img-blog.csdnimg.cn/20190116130201729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>ps：</strong><br> 如果第二步没有设置淘宝镜像，下载速度会很慢。就会像我之前一样，以为安装好了nodejs，就着急的关闭了命令行。最后发现npm却无法适应，找了很久才发现是npm没下完。</p>
<h3 id="四、-切换nodejs版本"><a href="#四、-切换nodejs版本" class="headerlink" title="四、 切换nodejs版本"></a>四、 切换nodejs版本</h3><ol>
<li><strong>查询所有的nodejs版本</strong></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nvm list </span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>nvm list 查看当前安装的所有nodejs版本<br><img src="https://img-blog.csdnimg.cn/20190115133437761.png" alt="在这里插入图片描述"></p>
<ol>
<li><strong>切换nodojs命令</strong></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nvm  use  version  </span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>比如：<br>nvm use 11.6.0</p>
<p>这样就切换到了11.6.0版本的nodejs了</p>
<p>版本号前出现*代表为当前使用的nodejs版本</p>
<h3 id="五、配置环境变量"><a href="#五、配置环境变量" class="headerlink" title="五、配置环境变量"></a>五、配置环境变量</h3><p> 为了全局使用nvm命令，就需要配置下环境变量。</p>
<p>这里以win10为例，win7大同小异</p>
<p><strong>1. 环境变量地址：</strong><br>点击我的电脑》属性》高级设置》环境变量》环境变量配置：点击我的电脑》属性》高级设置》环境变量》</p>
<p><strong>2. 删除系统变量</strong><br> a. 找到系统变量<br>   删除系统自带的nvm变量：NVM_HOME和NVM_SYMLINK</p>
<p> b. 打开path：删除nvm自动添加的变量<br>  Path = %NVM_HOME%;%NVM_SYMLINK%</p>
<p><strong>3. 配置用户变量：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NVM_HOME &#x3D; C:\Users\zhong\AppData\Roaming\nvm          </span><br><span class="line">NVM_SYMLINK &#x3D; C:\Program Files\nodejs </span><br><span class="line">Path &#x3D; %NVM_HOME%;%NVM_SYMLINK%</span><br><span class="line">123</span><br></pre></td></tr></table></figure>
<h3 id="六、测试node，npm是否安装成功"><a href="#六、测试node，npm是否安装成功" class="headerlink" title="六、测试node，npm是否安装成功"></a>六、测试node，npm是否安装成功</h3><p>依次执行node，npm命令，出现下面结果代表成功了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node</span><br><span class="line">npm</span><br><span class="line">12</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2019011613214686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzIzOTU4NjI1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>到这里，nvm，node，npm就都安装成功了。安装失败往往是npm没有下载成功，或者环境变量没有设置成功，多尝试几次就好。</p>
]]></content>
  </entry>
  <entry>
    <title>kali开启root</title>
    <url>/post/62638679/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>出于对渗透系统的安全考虑，Kali　Linux中默认无root用户权限，下面小编将给确实需要使用的用户带来Kali-2020开始root权限教程。</p>
<a id="more"></a>

<p>1、Vmware中启动系统,当出现如下图启动界面时按“E”键，注意要快，如果没赶上则重新启动客户机，重复上述操作即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200716205214199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdmZW5nX195,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>2、操作1成功后进入如（图1）界面，将光标下移至linux，如（图2），将ro修改为rw，在splash后添加 /init=/bin/bash，注意splash和init之间要加空格。</p>
<p><img src="https://img-blog.csdnimg.cn/20200716205423188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdmZW5nX195,size_16,color_FFFFFF,t_70" alt="img">   <img src="https://img-blog.csdnimg.cn/20200716205933998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdmZW5nX195,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>​                （图1）                                            （图2）</p>
<p>修改后的界面如（图3）所示： </p>
<p><img src="https://img-blog.csdnimg.cn/20200716210138655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdmZW5nX195,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>3、按F10保存，进入单用户模式，在root@（none）：/# 输入passwd，后面在New password：后设置root用户的密码，Retype new password:后重复输入密码确认。</p>
<p><img src="https://img-blog.csdnimg.cn/20200716210440801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdmZW5nX195,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>4、完成上述操作后重启客户机即可。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/4a17b156/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
